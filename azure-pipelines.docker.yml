# Configure building and testing in Azure pipelines

resources:
  containers:
  - container: devito-pip-gcc49
    image: 'tmbgreaves/devito-pip-gcc4.9'
  - container: devito-conda-gcc49
    image: 'tmbgreaves/devito-conda-gcc4.9'
  - container: devito-conda-gcc5
    image: 'tmbgreaves/devito-conda-gcc5'
  - container: devito-conda-gcc7
    image: 'tmbgreaves/devito-conda-gcc7'
  - container: devito-yask-conda-gcc7
    image: 'tmbgreaves/devito-yask-conda-gcc7'
  - container: devito-conda-gcc8
    image: 'tmbgreaves/devito-conda-gcc8'

jobs:
- job: Container_Build
  displayName: 'Build using'
  pool:
    vmImage: 'Ubuntu 16.04'
  strategy:
    matrix:
      pip-gcc4:
        gccVersion: '4.9'
        installMethod: 'pip'
        installYask: 'false'
        imageBaseName: 'devito'
      conda-gcc4:
        gccVersion: '4.9'
        installMethod: 'conda'
        installYask: 'false'
        imageBaseName: 'devito'
      conda-gcc5:
        gccVersion: '5'
        installMethod: 'conda'
        installYask: 'false'
        imageBaseName: 'devito'
      conda-gcc7:
        gccVersion: '7'
        installMethod: 'conda'
        installYask: 'false'
        imageBaseName: 'devito'
      yask-conda-gcc7:
        gccVersion: '7'
        installMethod: 'conda'
        installYask: 'true'
        imageBaseName: 'devito-yask'
      conda-gcc8:
        gccVersion: '8'
        installMethod: 'conda'
        installYask: 'false'
        imageBaseName: 'devito'

  variables:
     imageName: $(imageBaseName)-$(installMethod)-gcc$(gccVersion)
     dockerFile: Dockerfile.pipelines
     
  steps:
  - script: |
      docker build -f $(dockerFile) -t $(dockerId)/$(imageName):$(Build.BuildId) --build-arg gccvers=$(gccVersion) --build-arg installMethod=$(installMethod) --build-arg yask=$(installYask) .
      docker tag $(dockerId)/$(imageName):$(Build.BuildId) $(dockerId)/$(imageName):latest
      docker login -u $(dockerId) -p $(dockerPassword)
      docker push $(dockerId)/$(imageName):$(Build.BuildId)
      docker push $(dockerId)/$(imageName):latest


- job: Run_Tests
  displayName: 'Test using'
  dependsOn: Container_Build
  condition: succeeded('Container_Build')
  pool:
    vmImage: 'Ubuntu 16.04'
  strategy:
    matrix:
      pip-gcc49:
        containerName: devito-pip-gcc49
        testMethod: 'pip'
      openmp-conda-gcc49:
        containerName: devito-pip-gcc49
        testMethod: 'conda'
        useOpenMP: 'true'
      conda-gcc5: 
        containerName: devito-conda-gcc5
        testMethod: 'conda'
      yask-conda-gcc7:
        containerName: devito-yask-conda-gcc7
        testMethod: 'conda'
        devitoBackend: 'yask'
      ops-conda-gcc7:
        containerName: devito-conda-gcc7
        testMethod: 'conda'
        devitoBackend: 'OPS'
      conda-gcc8: 
        containerName: devito-conda-gcc8
        testMethod: 'conda'

  container: $[ variables['containerName'] ]
  timeoutInMinutes: 180
  steps:
  - bash: | 
      export HOME=/devito
  
      if [ -v devitoBackend} ] ; then
        export DEVITO_BACKEND=$(devitoBackend) ;
        echo "Setting DEVITO_BACKEND=${DEVITO_BACKEND}" ;
      fi

      if [ -v useOpenMP ] ; then
        export DEVITO_OPENMP=1 ;
        export OMP_NUM_THREADS=2 ;
        echo "Setting DEVITO_OPENMP=${DEVITO_OPENMP} and OMP_NUM_THREADS=${OMP_NUM_THREADS}"
      fi

      if [ $(testMethod) == 'pip' ] ; then
        export PYTHONPATH=${PYTHONPATH}:/devito/lib/python3.6/site-packages
        python setup.py test ; 
      elif [ $(testMethod) == 'conda' ] ; then
        source activate devito ;
        py.test --cov devito tests/ ;
        python examples/seismic/benchmark.py test -P tti -so 4 -a -d 20 20 20 -n 5 ;
        python examples/seismic/benchmark.py test -P acoustic -a ;
        python examples/seismic/acoustic/acoustic_example.py --full ;
        python examples/seismic/acoustic/acoustic_example.py --full --checkpointing ;
        python examples/seismic/acoustic/acoustic_example.py --constant --full ;
        python examples/misc/linalg.py mat-vec mat-mat-sum transpose-mat-vec ;
        python examples/seismic/tti/tti_example.py -a ;
        python examples/seismic/tti/tti_example.py -a --noazimuth ; 
        python examples/seismic/elastic/elastic_example.py ; 
        py.test --nbval examples/cfd ; 
        py.test --nbval examples/seismic/tutorials/0[1-3]* ; 
        py.test --nbval examples/compiler ;
        codecov ;
        sphinx-apidoc -f -o docs/ examples ;
        sphinx-apidoc -f -o docs/ devito devito/yask/* ;
        pushd docs ;
        make html ;
        popd ;
      fi
